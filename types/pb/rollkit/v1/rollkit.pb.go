// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: rollkit/v1/rollkit.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Version captures the consensus rules for processing a block in the blockchain,
// including all blockchain data structures and the rules of the application's
// state transition machine.
// This is equivalent to the tmversion.Consensus type in Tendermint.
type Version struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         uint64                 `protobuf:"varint,1,opt,name=block,proto3" json:"block,omitempty"`
	App           uint64                 `protobuf:"varint,2,opt,name=app,proto3" json:"app,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_rollkit_v1_rollkit_proto_rawDescGZIP(), []int{0}
}

func (x *Version) GetBlock() uint64 {
	if x != nil {
		return x.Block
	}
	return 0
}

func (x *Version) GetApp() uint64 {
	if x != nil {
		return x.App
	}
	return 0
}

// Header is the header of a block in the blockchain.
type Header struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Block and App version
	Version *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Block height
	Height uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// Block creation time
	Time uint64 `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	// Previous block info
	LastHeaderHash []byte `protobuf:"bytes,4,opt,name=last_header_hash,json=lastHeaderHash,proto3" json:"last_header_hash,omitempty"`
	// Commit from aggregator(s) from the last block
	LastCommitHash []byte `protobuf:"bytes,5,opt,name=last_commit_hash,json=lastCommitHash,proto3" json:"last_commit_hash,omitempty"`
	// Block.Data root aka Transactions
	DataHash []byte `protobuf:"bytes,6,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	// Consensus params for current block
	ConsensusHash []byte `protobuf:"bytes,7,opt,name=consensus_hash,json=consensusHash,proto3" json:"consensus_hash,omitempty"`
	// State after applying txs from the current block
	AppHash []byte `protobuf:"bytes,8,opt,name=app_hash,json=appHash,proto3" json:"app_hash,omitempty"`
	// Root hash of all results from the txs from the previous block.
	// This is ABCI specific but smart-contract chains require some way of committing
	// to transaction receipts/results.
	LastResultsHash []byte `protobuf:"bytes,9,opt,name=last_results_hash,json=lastResultsHash,proto3" json:"last_results_hash,omitempty"`
	// Original proposer of the block
	// Note that the address can be derived from the pubkey which can be derived
	// from the signature when using secp256k.
	// We keep this in case users choose another signature format where the
	// pubkey can't be recovered by the signature (e.g. ed25519).
	ProposerAddress []byte `protobuf:"bytes,10,opt,name=proposer_address,json=proposerAddress,proto3" json:"proposer_address,omitempty"`
	// validatorhash for compatibility with tendermint light client.
	ValidatorHash []byte `protobuf:"bytes,11,opt,name=validator_hash,json=validatorHash,proto3" json:"validator_hash,omitempty"`
	// Chain ID the block belongs to
	ChainId       string `protobuf:"bytes,12,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Header) Reset() {
	*x = Header{}
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_rollkit_v1_rollkit_proto_rawDescGZIP(), []int{1}
}

func (x *Header) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *Header) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Header) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Header) GetLastHeaderHash() []byte {
	if x != nil {
		return x.LastHeaderHash
	}
	return nil
}

func (x *Header) GetLastCommitHash() []byte {
	if x != nil {
		return x.LastCommitHash
	}
	return nil
}

func (x *Header) GetDataHash() []byte {
	if x != nil {
		return x.DataHash
	}
	return nil
}

func (x *Header) GetConsensusHash() []byte {
	if x != nil {
		return x.ConsensusHash
	}
	return nil
}

func (x *Header) GetAppHash() []byte {
	if x != nil {
		return x.AppHash
	}
	return nil
}

func (x *Header) GetLastResultsHash() []byte {
	if x != nil {
		return x.LastResultsHash
	}
	return nil
}

func (x *Header) GetProposerAddress() []byte {
	if x != nil {
		return x.ProposerAddress
	}
	return nil
}

func (x *Header) GetValidatorHash() []byte {
	if x != nil {
		return x.ValidatorHash
	}
	return nil
}

func (x *Header) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

// SignedHeader is a header with a signature and a signer.
type SignedHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *Header                `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Signature     []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Signer        *Signer                `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignedHeader) Reset() {
	*x = SignedHeader{}
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignedHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedHeader) ProtoMessage() {}

func (x *SignedHeader) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedHeader.ProtoReflect.Descriptor instead.
func (*SignedHeader) Descriptor() ([]byte, []int) {
	return file_rollkit_v1_rollkit_proto_rawDescGZIP(), []int{2}
}

func (x *SignedHeader) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *SignedHeader) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SignedHeader) GetSigner() *Signer {
	if x != nil {
		return x.Signer
	}
	return nil
}

// Signer is a signer of a block in the blockchain.
type Signer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Address of the signer
	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Public key of the signer
	PubKey        []byte `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Signer) Reset() {
	*x = Signer{}
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signer) ProtoMessage() {}

func (x *Signer) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signer.ProtoReflect.Descriptor instead.
func (*Signer) Descriptor() ([]byte, []int) {
	return file_rollkit_v1_rollkit_proto_rawDescGZIP(), []int{3}
}

func (x *Signer) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Signer) GetPubKey() []byte {
	if x != nil {
		return x.PubKey
	}
	return nil
}

// Metadata is the metadata of a block in the blockchain.
type Metadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// chain id
	ChainId string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Block height
	Height uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// Block creation time
	Time uint64 `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	// Previous block info
	LastDataHash  []byte `protobuf:"bytes,4,opt,name=last_data_hash,json=lastDataHash,proto3" json:"last_data_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_rollkit_v1_rollkit_proto_rawDescGZIP(), []int{4}
}

func (x *Metadata) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *Metadata) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Metadata) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Metadata) GetLastDataHash() []byte {
	if x != nil {
		return x.LastDataHash
	}
	return nil
}

// Data is the data of a block in the blockchain.
type Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *Metadata              `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Txs           [][]byte               `protobuf:"bytes,2,rep,name=txs,proto3" json:"txs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_rollkit_v1_rollkit_proto_rawDescGZIP(), []int{5}
}

func (x *Data) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Data) GetTxs() [][]byte {
	if x != nil {
		return x.Txs
	}
	return nil
}

// SignedData is a data with a signature and a signer.
type SignedData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *Data                  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Signature     []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Signer        *Signer                `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignedData) Reset() {
	*x = SignedData{}
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedData) ProtoMessage() {}

func (x *SignedData) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedData.ProtoReflect.Descriptor instead.
func (*SignedData) Descriptor() ([]byte, []int) {
	return file_rollkit_v1_rollkit_proto_rawDescGZIP(), []int{6}
}

func (x *SignedData) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SignedData) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SignedData) GetSigner() *Signer {
	if x != nil {
		return x.Signer
	}
	return nil
}

// Vote is a vote for a block in the blockchain.
type Vote struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Chain ID
	ChainId string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Block height
	Height uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// Timestamp
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Block ID hash
	BlockIdHash []byte `protobuf:"bytes,4,opt,name=block_id_hash,json=blockIdHash,proto3" json:"block_id_hash,omitempty"`
	// Validator address
	ValidatorAddress []byte `protobuf:"bytes,5,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Vote) Reset() {
	*x = Vote{}
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vote) ProtoMessage() {}

func (x *Vote) ProtoReflect() protoreflect.Message {
	mi := &file_rollkit_v1_rollkit_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vote.ProtoReflect.Descriptor instead.
func (*Vote) Descriptor() ([]byte, []int) {
	return file_rollkit_v1_rollkit_proto_rawDescGZIP(), []int{7}
}

func (x *Vote) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *Vote) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Vote) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Vote) GetBlockIdHash() []byte {
	if x != nil {
		return x.BlockIdHash
	}
	return nil
}

func (x *Vote) GetValidatorAddress() []byte {
	if x != nil {
		return x.ValidatorAddress
	}
	return nil
}

var File_rollkit_v1_rollkit_proto protoreflect.FileDescriptor

const file_rollkit_v1_rollkit_proto_rawDesc = "" +
	"\n" +
	"\x18rollkit/v1/rollkit.proto\x12\n" +
	"rollkit.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"1\n" +
	"\aVersion\x12\x14\n" +
	"\x05block\x18\x01 \x01(\x04R\x05block\x12\x10\n" +
	"\x03app\x18\x02 \x01(\x04R\x03app\"\xaf\x03\n" +
	"\x06Header\x12-\n" +
	"\aversion\x18\x01 \x01(\v2\x13.rollkit.v1.VersionR\aversion\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x04R\x06height\x12\x12\n" +
	"\x04time\x18\x03 \x01(\x04R\x04time\x12(\n" +
	"\x10last_header_hash\x18\x04 \x01(\fR\x0elastHeaderHash\x12(\n" +
	"\x10last_commit_hash\x18\x05 \x01(\fR\x0elastCommitHash\x12\x1b\n" +
	"\tdata_hash\x18\x06 \x01(\fR\bdataHash\x12%\n" +
	"\x0econsensus_hash\x18\a \x01(\fR\rconsensusHash\x12\x19\n" +
	"\bapp_hash\x18\b \x01(\fR\aappHash\x12*\n" +
	"\x11last_results_hash\x18\t \x01(\fR\x0flastResultsHash\x12)\n" +
	"\x10proposer_address\x18\n" +
	" \x01(\fR\x0fproposerAddress\x12%\n" +
	"\x0evalidator_hash\x18\v \x01(\fR\rvalidatorHash\x12\x19\n" +
	"\bchain_id\x18\f \x01(\tR\achainId\"\x84\x01\n" +
	"\fSignedHeader\x12*\n" +
	"\x06header\x18\x01 \x01(\v2\x12.rollkit.v1.HeaderR\x06header\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\x12*\n" +
	"\x06signer\x18\x03 \x01(\v2\x12.rollkit.v1.SignerR\x06signer\";\n" +
	"\x06Signer\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\x12\x17\n" +
	"\apub_key\x18\x02 \x01(\fR\x06pubKey\"w\n" +
	"\bMetadata\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\tR\achainId\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x04R\x06height\x12\x12\n" +
	"\x04time\x18\x03 \x01(\x04R\x04time\x12$\n" +
	"\x0elast_data_hash\x18\x04 \x01(\fR\flastDataHash\"J\n" +
	"\x04Data\x120\n" +
	"\bmetadata\x18\x01 \x01(\v2\x14.rollkit.v1.MetadataR\bmetadata\x12\x10\n" +
	"\x03txs\x18\x02 \x03(\fR\x03txs\"|\n" +
	"\n" +
	"SignedData\x12$\n" +
	"\x04data\x18\x01 \x01(\v2\x10.rollkit.v1.DataR\x04data\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\x12*\n" +
	"\x06signer\x18\x03 \x01(\v2\x12.rollkit.v1.SignerR\x06signer\"\xc4\x01\n" +
	"\x04Vote\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\tR\achainId\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x04R\x06height\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\"\n" +
	"\rblock_id_hash\x18\x04 \x01(\fR\vblockIdHash\x12+\n" +
	"\x11validator_address\x18\x05 \x01(\fR\x10validatorAddressB0Z.github.com/rollkit/rollkit/types/pb/rollkit/v1b\x06proto3"

var (
	file_rollkit_v1_rollkit_proto_rawDescOnce sync.Once
	file_rollkit_v1_rollkit_proto_rawDescData []byte
)

func file_rollkit_v1_rollkit_proto_rawDescGZIP() []byte {
	file_rollkit_v1_rollkit_proto_rawDescOnce.Do(func() {
		file_rollkit_v1_rollkit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rollkit_v1_rollkit_proto_rawDesc), len(file_rollkit_v1_rollkit_proto_rawDesc)))
	})
	return file_rollkit_v1_rollkit_proto_rawDescData
}

var file_rollkit_v1_rollkit_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_rollkit_v1_rollkit_proto_goTypes = []any{
	(*Version)(nil),               // 0: rollkit.v1.Version
	(*Header)(nil),                // 1: rollkit.v1.Header
	(*SignedHeader)(nil),          // 2: rollkit.v1.SignedHeader
	(*Signer)(nil),                // 3: rollkit.v1.Signer
	(*Metadata)(nil),              // 4: rollkit.v1.Metadata
	(*Data)(nil),                  // 5: rollkit.v1.Data
	(*SignedData)(nil),            // 6: rollkit.v1.SignedData
	(*Vote)(nil),                  // 7: rollkit.v1.Vote
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_rollkit_v1_rollkit_proto_depIdxs = []int32{
	0, // 0: rollkit.v1.Header.version:type_name -> rollkit.v1.Version
	1, // 1: rollkit.v1.SignedHeader.header:type_name -> rollkit.v1.Header
	3, // 2: rollkit.v1.SignedHeader.signer:type_name -> rollkit.v1.Signer
	4, // 3: rollkit.v1.Data.metadata:type_name -> rollkit.v1.Metadata
	5, // 4: rollkit.v1.SignedData.data:type_name -> rollkit.v1.Data
	3, // 5: rollkit.v1.SignedData.signer:type_name -> rollkit.v1.Signer
	8, // 6: rollkit.v1.Vote.timestamp:type_name -> google.protobuf.Timestamp
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_rollkit_v1_rollkit_proto_init() }
func file_rollkit_v1_rollkit_proto_init() {
	if File_rollkit_v1_rollkit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rollkit_v1_rollkit_proto_rawDesc), len(file_rollkit_v1_rollkit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rollkit_v1_rollkit_proto_goTypes,
		DependencyIndexes: file_rollkit_v1_rollkit_proto_depIdxs,
		MessageInfos:      file_rollkit_v1_rollkit_proto_msgTypes,
	}.Build()
	File_rollkit_v1_rollkit_proto = out.File
	file_rollkit_v1_rollkit_proto_goTypes = nil
	file_rollkit_v1_rollkit_proto_depIdxs = nil
}
